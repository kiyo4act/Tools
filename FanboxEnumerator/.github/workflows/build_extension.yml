name: Build Chrome Extension

on:
  push:
    branches:
      - main # mainブランチへのpush時に実行
    paths:
      - 'FanboxEnumerator/_src/**' # _srcディレクトリ以下のファイル変更時のみ
      - '.github/workflows/build_extension.yml' # このワークフローファイル自体の変更時

permissions:
  contents: write # リポジトリへのコミット・プッシュのために必要

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: FanboxEnumerator # このワークフロー内のrunステップはFanboxEnumeratorディレクトリを起点とする

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version and date for naming
        id: version_info
        run: |
          # manifest.jsonからバージョンを取得 (例: "1.2" -> 12)
          VERSION_STRING=$(jq -r .version _src/manifest.json)
          # バージョン文字列からドットを除去してリビジョン番号とする
          REVISION=$(echo $VERSION_STRING | sed 's/\.//g')
          # 現在の日付を取得 (YYYYMMDD)
          CURRENT_DATE=$(date +'%Y%m%d')
          echo "revision_number=${REVISION}" >> $GITHUB_OUTPUT
          echo "current_date=${CURRENT_DATE}" >> $GITHUB_OUTPUT
          echo "zip_filename=FanboxEnumerator_${CURRENT_DATE}_Rev${REVISION}.zip" >> $GITHUB_OUTPUT
          echo "Version: $VERSION_STRING, Revision for filename: $REVISION, Date: $CURRENT_DATE"

      - name: Create ZIP archive
        run: |
          cd _src && zip -r ../${{ steps.version_info.outputs.zip_filename }} . -x "*.DS_Store"
          echo "Created ZIP file: ${{ steps.version_info.outputs.zip_filename }}"

      - name: Create dist directory if it doesn't exist
        run: mkdir -p dist

      - name: Move ZIP to dist directory
        run: mv ${{ steps.version_info.outputs.zip_filename }} dist/
        
      - name: List files in dist
        run: ls -l dist/

      - name: Commit and push ZIP file
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          git add dist/${{ steps.version_info.outputs.zip_filename }}
          # 変更があった場合のみコミット＆プッシュ
          if git diff --staged --quiet; then
            echo "No changes to the extension package. Nothing to commit."
          else
            git commit -m "Automated: Build and package extension - ${{ steps.version_info.outputs.zip_filename }}"
            # Pull before push to avoid conflicts if the branch was updated externally
            git pull --rebase origin main 
            git push
            echo "Extension package committed and pushed to dist directory."
          fi
